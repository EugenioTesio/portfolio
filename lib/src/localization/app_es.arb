{
  "name": "Eugenio Tesio",
  "@name": {
    "description": "Mi nombre"
  },
  "homeSectionTitle": "Inicio",
  "@homeSectionTitle": {
    "description": "Título de la sección de Inicio"
  },
  "aboutSectionTitle": "Acerca de",
  "@aboutSectionTitle": {
    "description": "Título de la sección Acerca de"
  },
  "aboutSectionTitleAlt": "Sobre mí",
  "@aboutSectionTitleAlt": {
    "description": "Título de la sección Acerca de"
  },
  "experienceSectionTitle": "Experiencia",
  "@experienceSectionTitle": {
    "description": "Título de la sección Experiencia"
  },
  "projectsSectionTitle": "Proyectos",
  "@projectsSectionTitle": {
    "description": "Título de la sección Proyectos"
  },
  "englishLanguage": "Inglés",
  "@englishLanguage": {
    "description": "Idoma Inglés"
  },
  "spanishLanguage": "Español",
  "@spanishLanguage": {
    "description": "Idioma Francés"
  },
  "resume": "Currículum",
  "@resume": {
    "description": "Currículum"
  },
  "downloadResume": "Descargar currículum",
  "@downloadResume": {
    "description": "Diálogo de descarga de currículum"
  },
  "resumePresent": "Actual",
  "@resumePresent": {
    "description": "Trabajo o educación actual"
  },
  "description": "Desarrollador de software apasionado",
  "@description": {
    "description": "Mi descripción"
  },
  "subDescription": "Entusiasta senior de Flutter y Python",
  "@subDescription": {
    "description": "Mi subdescripción"
  },
  "about": "¡Hola! Soy Eugenio Tesio, un desarrollador de Flutter altamente experimentado con más de 5 años de experiencia en el diseño y desarrollo de aplicaciones completas utilizando Java, Spring Boot, Python y el framework Flutter. Hábil en el aprovechamiento de patrones de arquitectura poderosos para crear productos de software impresionantes que satisfacen las necesidades del cliente. Apasionado por crear soluciones de alto impacto optimizando soluciones técnicas complejas para que las empresas alcancen sus objetivos. Buscando proyectos innovadores de Python/Flutter donde pueda combinar mis conocimientos más fuertes.",
  "@about": {
    "description": "Mi introducción"
  },
  "portfolioDescription": "¡Sí, es ESTE portafolio! \nEste proyecto sigue una arquitectura basada en Riverpod, utilizando un enfoque de características para su estructura. Es completamente receptivo y admite múltiples temas e idiomas.",
  "@portfolioDescription": {
    "description": "Descripción del proyecto Portfolio"
  },
  "credit": "Diseño inspirado en",
  "@credit": {
    "description": "Crédito a"
  },
  "pairtreeDevJobTitle": "Desarrollador Full Stack",
  "@pairtreeDevJobTitle": {
    "description": "Título del trabajo de desarrollador en Pairtree"
  },
  "pairtreeDevJobDescription": "<ul> <li>Desarrolló aplicaciones utilizando Flutter y la arquitectura BLoC.</li> <li>Utilizó GitHub Actions para pruebas y implementación.</li> <li>Realizó pruebas unitarias, de widgets e integración.</li> <li>Implementó pruebas doradas para el desarrollo de la interfaz de usuario.</li> <li>Ayudó en el desarrollo de backend de Python utilizando FastAPI.</li> <li>Utilizó SQLAlchemy y migraciones de Alembic para operaciones de base de datos.</li> <li>Logró una cobertura de código del 100% para todas las pruebas en Python Backend.</li> <li>Utilizó accesorios para crear datos de prueba para pruebas funcionales y de regresión.</li> <li>Modificó casos de prueba existentes para mejorar la cobertura y precisión.</li> <li>Trabajó con desarrolladores para solucionar y resolver problemas de software.</li> <li>Desarrolló y mejoró tuberías de CI/CD.</li> <li>Identificó y rastreó problemas con Sentry.</li> </ul>",
  "@pairtreeDevJobDescription": {
    "description": "Descripción del trabajo de desarrollador en Pairtree"
  },
  "tandamosDevJobTitle": "Desarrollador Full Stack",
  "@tandamosDevJobTitle": {
    "description": "Título del trabajo de desarrollador en Tandamos"
  },
  "tandamosDevJobDescription": "<ul> <li>Desarrolló una aplicación móvil para clientes utilizando Flutter.</li> <li>Mejoró los servicios backend existentes construidos con Next.js utilizando TypeScript.</li> <li>Desarrolló un marco TypeORM para administrar el acceso a datos desde una base de datos MySQL.</li> <li>Utilizó la biblioteca de gestión de estado Riverpod para almacenar y administrar el estado de la aplicación.</li> <li>Desarrolló componentes de IU personalizados reutilizables utilizando Flutter.</li> <li>Desarrolló pruebas unitarias, de widgets e integración automatizadas para garantizar la estabilidad de la aplicación.</li> <li>Desarrolló funciones reutilizables en Node.js para reducir la redundancia de código.</li> <li>Utilizó Firebase para la autenticación, autorización y sincronización de datos.</li> </ul>",
  "@tandamosDevJobDescription": {
    "description": "Descripción del trabajo de desarrollador en Tandamos"
  },
  "valtechDevJobTitle": "Desarrollador Backend",
  "@valtechDevJobTitle": {
    "description": "Título del trabajo de desarrollador en Valtech"
  },
  "valtechDevJobDescription": "<ul> <li>Desarrolló una aplicación Java Spring Boot que permitió a otros servicios internos enviar correos electrónicos utilizando Google Pub/Sub</li> <li>El servicio utilizó Oracle Responsys para habilitar la entrega de correos electrónicos Mejoró la confiabilidad y escalabilidad del sistema de entrega de correos electrónicos.</li> <li>Creó pruebas unitarias e integración para garantizar que la aplicación cumpliera con los requisitos.</li> <li>Investigó y resolvió cualquier error o problema encontrado</li> <li>Desarrolló APIs RESTful para permitir que la aplicación se comunique con otros servicios.</li> <li>Colaboró con otros desarrolladores y partes interesadas para garantizar el éxito.</li> <li>Administró el desarrollo de la aplicación a través de todo su ciclo de vida.</li> <li>Identificó e implementó nuevas herramientas para mejorar la funcionalidad de la aplicación.</li> <li>Resolvió conflictos entre la aplicación y servicios de terceros.</li> </ul>",
  "@valtechDevJobDescription": {
    "description": "Descripción del trabajo de desarrollador en Valtech"
  },
  "freelanceDevJobTitle": "Desarrollador Full Stack",
  "@freelanceDevJobTitle": {
    "description": "Título del trabajo de desarrollador como Freelance"
  },
  "freelanceDevJobDescription": "<ul> <li>Trabajó en aplicaciones web y móviles utilizando Flutter con gestión de estado como Provider, BloC, Riverpod, GetX. Prueba unitaria, prueba de widget, prueba dorada y prueba de integración. </li> <li>Desarrolló aplicaciones de software con Java utilizando SpringBoot implementando Spring Web, Hibernate, Spring Data JPA, Spring Security, OAuth2 Client, Spring JDBC, Spring. Data MongoDB, WebSockets, Spring Messaging, Scheduler, Spring Cache, Spring Boot Actuator, Swagger, GCP Storage y GCP Messaging.</li> <li>Desarrolló componentes de backend de Python utilizando Flask o FastAPI, WebSockets, SqlAlchemy y REST API con el administrador de coroutine Asyncio, Base Model (pydantic)</li> <li>Desarrolló migración automática de base de datos en backends de Python con Alembic de SqlAlchemy.</li> <li>Implementó aplicaciones móviles en Google PlayStore y AppStore sin ser rechazado.</li> <li>Realizó operaciones de DevOps en Google Cloud, como CI/CD utilizando Cloud Run, Cloud App Engine Flexible Environment, Cloud Build, Cloud Artifacts</li> <li>Trabajó en modularización, creando múltiples paquetes.</li> <li>Trabajó con Firebase como plataforma de backend y con Google y Facebook para la autenticación</li> <li>Trabajó con la base de datos NoSQL Firestore, Google Storage, Google Functions, Google Pub/Sub y Remote Config.</li> <li>Realizó búsquedas de texto completo de Firebase Elastic Search.</li> <li>Utilizó Google Analytics, Crashlytics y Sentry para el seguimiento de errores y métricas.</li> <li>Trabajó con OCPP 1.6 (Protocolo de punto de carga abierto), el protocolo de conexión de cargador eléctrico del vehículo.</li> <li>Monitoreó la operación continua de los programas asignados y respondió a los problemas diagnosticando y corrigiendo errores de lógica y codificación.</li> <li>Discutió el progreso del proyecto con los clientes, recopiló comentarios en diferentes etapas y abordó directamente las preocupaciones.</li> <li>Reunió y definió los requisitos del cliente para desarrollar especificaciones claras para los planes del proyecto</li> <li>Orquestó implementaciones de software a gran escala eficientes, incluyendo la prueba de características y la corrección de código.</li> <li>Diseñó y documentó sistemas basados en los resultados del análisis.</li> <li>Desarrolló bases de datos, programas y procesos para la integración e implementación en toda la empresa.</li> <li>Capacitó a nuevos desarrolladores y programadores en los estándares de diseño y revisión de la empresa.</li> <li>Revisó los requisitos del usuario, analizó, diseñó, implementó, instaló y entregó capacitación para nuevas aplicaciones.</li> </ul>",
  "@freelanceDevJobDescription": {
    "description": "Descripción del trabajo de desarrollador como Freelance"
  },
  "vulleticProjectDescription": "El propósito de la solución construida es integrar el cargador de vehículos eléctricos con una plataforma en línea que los administre. La aplicación móvil construida en Flutter con GetX como paquete de gestión de estado conecta a los usuarios con el cargador de vehículos eléctricos para cargar sus vehículos permitiéndoles pagar a través de la plataforma. La aplicación web construida en Nuxt permite al propietario del cargador de vehículos eléctricos administrarlos y obtener toda la información que necesitan. Los cargadores están conectados en tiempo real utilizando una conexión WebSocket con el backend construido en Python. La plataforma y la aplicación móvil fueron desarrolladas para la empresa Vulletic, que es el proveedor de cargadores de vehículos eléctricos.",
  "@vulleticProjectDescription": {
    "description": "Descripción del proyecto Vulletic"
  },
  "collectioProjectDescriptionHtml": "El propósito de la aplicación es facilitar la recolección mensual de membresía. Se construyó pensando en cómo ayudar a asociaciones y clubes que recolectan la membresía mensualmente manualmente con una persona recolectora. Con esta aplicación, pueden automatizar la entrega de facturas, recordar a los usuarios sobre cuáles están pendientes y ayudar al recolector a no perder a nadie o repetir a alguien. La aplicación está construida en Flutter con el marco GetX. Utiliza Firebase como plataforma de autenticación y Firestore como base de datos en tiempo real",
  "@collectioProjectDescription": {
    "description": "Descripción del proyecto Collect.io"
  }
}